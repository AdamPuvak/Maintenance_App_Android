IconButton(
                                    icon: Icon(Icons.edit),
                                    onPressed: () {
                                      category = fault['category'];
                                      code = fault['code'];
                                      showDialog(
                                        context: context,
                                        builder: (BuildContext context) {
                                          return StatefulBuilder(
                                            builder: (BuildContext context, StateSetter setState) {
                                              DateTime existingDate = fault['date'].toDate();
                                              String formattedDate = DateFormat('dd. MM. yyyy (HH:mm)').format(existingDate);
                                              String existingDescription = fault['description'];
                                              String existingWorker = fault['worker'];

                                              isRepaired = fault['isRepaired'];

                                              DateTime existingRepairDate = fault['repairDate'].toDate();
                                              String formattedRepairDate = DateFormat('dd. MM. yyyy (HH:mm)').format(existingRepairDate);
                                              _repairDateController.text = formattedRepairDate;

                                              _dateController.text = formattedDate;
                                              _descriptionController.text = existingDescription;
                                              _workerController.text = existingWorker;

                                              return WillPopScope(
                                                onWillPop: () async {
                                                  setState(() {
                                                    category = null;
                                                    code = null;
                                                  });
                                                  return true;
                                                },
                                                child: AlertDialog(
                                                  title: Text('Upraviť záznam'),
                                                  content: SingleChildScrollView(
                                                    child: Container(
                                                      width: 300,
                                                      height: 350,
                                                      child: ListView(
                                                        shrinkWrap: true,
                                                        children: <Widget>[
                                                          TextFormField(
                                                            controller: _dateController,
                                                            decoration: InputDecoration(
                                                              labelText: 'Dátum',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                            readOnly: true,
                                                            onTap: () async {
                                                              DateTime? pickedDate = await showDatePicker(
                                                                context: context,
                                                                initialDate: existingDate,
                                                                firstDate: DateTime(2000),
                                                                lastDate: DateTime(2025),
                                                              );

                                                              if (pickedDate != null) {
                                                                String formattedDate = DateFormat('dd. MM. yyyy').format(pickedDate);
                                                                setState(() {
                                                                  _dateController.text = formattedDate;
                                                                });

                                                                TimeOfDay? pickedTime = await showTimePicker(
                                                                  context: context,
                                                                  initialTime: TimeOfDay.fromDateTime(existingDate),
                                                                );

                                                                if (pickedTime != null) {
                                                                  final now = DateTime.now();
                                                                  final dt = DateTime(now.year, now.month, now.day, pickedTime.hour, pickedTime.minute);
                                                                  String formattedTime = DateFormat('HH:mm').format(dt);
                                                                  _dateController.text = '$formattedDate ($formattedTime)';
                                                                }
                                                              }
                                                            },
                                                          ),
                                                          TextField(
                                                            controller: _descriptionController,
                                                            decoration: InputDecoration(
                                                              labelText: 'Popis',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                          ),
                                                          TextField(
                                                            controller: _workerController,
                                                            decoration: InputDecoration(
                                                              labelText: 'Pracovník',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                          ),

                                                          DropdownButtonFormField<String>(
                                                            decoration: InputDecoration(
                                                              labelText: 'Kategória',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                            value: category,
                                                            onChanged: (newValue) {
                                                              setState(() {
                                                                category = newValue!;
                                                                code = null;
                                                              });
                                                            },
                                                            items: codeCategories.keys.map<DropdownMenuItem<String>>((String value) {
                                                              return DropdownMenuItem<String>(
                                                                value: value,
                                                                child: Text(value),
                                                              );
                                                            }).toList(),
                                                          ),
                                                          DropdownButtonFormField<String>(
                                                            decoration: InputDecoration(
                                                              labelText: 'Kód',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                            value: code,
                                                            onChanged: (newValue) {
                                                              setState(() {
                                                                code = newValue!;
                                                              });
                                                            },
                                                            items: codeCategories[category]?.map<DropdownMenuItem<String>>((String value) {
                                                              return DropdownMenuItem<String>(
                                                                value: value,
                                                                child: Text(value),
                                                              );
                                                            }).toList(),
                                                          ),

                                                          DropdownButtonFormField<bool>(
                                                            decoration: InputDecoration(
                                                              labelText: 'Stav',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                            value: isRepaired,
                                                            onChanged: (newValue) {
                                                              isRepaired = newValue!;
                                                              updateIsRepaired(newValue);
                                                            },
                                                            items: [
                                                              DropdownMenuItem(
                                                                value: true,
                                                                child: Text('Opravená'),
                                                              ),
                                                              DropdownMenuItem(
                                                                value: false,
                                                                child: Text('Neopravená'),
                                                              ),
                                                            ],
                                                          ),

                                                          TextFormField(
                                                            controller: _repairDateController,
                                                            decoration: InputDecoration(
                                                              labelText: 'Dátum opravy',
                                                              labelStyle: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 18,
                                                              ),
                                                            ),
                                                            readOnly: true,
                                                            onTap: () async {
                                                              DateTime? pickedDate = await showDatePicker(
                                                                context: context,
                                                                initialDate: existingRepairDate,
                                                                firstDate: DateTime(2000),
                                                                lastDate: DateTime(2025),
                                                              );

                                                              if (pickedDate != null) {
                                                                String formattedDate = DateFormat('dd. MM. yyyy').format(pickedDate);
                                                                setState(() {
                                                                  _repairDateController.text = formattedDate;
                                                                });

                                                                TimeOfDay? pickedTime = await showTimePicker(
                                                                  context: context,
                                                                  initialTime: TimeOfDay.fromDateTime(existingRepairDate),
                                                                );

                                                                if (pickedTime != null) {
                                                                  final now = DateTime.now();
                                                                  final dt = DateTime(now.year, now.month, now.day, pickedTime.hour, pickedTime.minute);
                                                                  String formattedTime = DateFormat('HH:mm').format(dt);
                                                                  _repairDateController.text = '$formattedDate ($formattedTime)';
                                                                }
                                                              }
                                                            },
                                                          ),

                                                        ],
                                                      ),
                                                    ),
                                                  ),
                                                  actions: <Widget>[
                                                    TextButton(
                                                      onPressed: () async {
                                                        try {
                                                          await FirebaseFirestore.instance
                                                              .collection('devices')
                                                              .doc(widget.device.id)
                                                              .collection('faults')
                                                              .doc(fault.id)
                                                              .delete();

                                                          await refreshData();

                                                          Navigator.of(context).pop();

                                                        } catch (error) {
                                                          print('Chyba při mazání záznamu: $error');
                                                        }
                                                      },
                                                      style: TextButton.styleFrom(
                                                        backgroundColor: Colors.red,
                                                        minimumSize: Size(100, 50),
                                                        shape: RoundedRectangleBorder(
                                                          borderRadius: BorderRadius.circular(10),
                                                          side: BorderSide(color: Colors.black),
                                                        ),
                                                      ),
                                                      child: Text(
                                                        'Vymazať',
                                                        style: TextStyle(
                                                          fontSize: 18,
                                                          color: Colors.white,
                                                          fontWeight: FontWeight.bold,
                                                        ),
                                                      ),
                                                    ),

                                                    TextButton(
                                                      onPressed: () async {
                                                        setState(() {
                                                          _isDateErrorVisible = false;
                                                        });
                                                        String date = _dateController.text;
                                                        String description = _descriptionController.text;
                                                        String worker = _workerController.text;
                                                        String repairDate = _repairDateController.text;

                                                        try {
                                                          DateTime parsedDate = DateFormat('dd. MM. yyyy (HH:mm)').parse(date);
                                                          Timestamp timestamp = Timestamp.fromDate(parsedDate);
                                                          DateTime parsedDate2 = DateFormat('dd. MM. yyyy (HH:mm)').parse(repairDate);
                                                          Timestamp timestamp2 = Timestamp.fromDate(parsedDate2);

                                                          await FirebaseFirestore.instance
                                                              .collection('devices')
                                                              .doc(widget.device.id)
                                                              .collection('faults')
                                                              .doc(fault.id)
                                                              .update({
                                                            'date': timestamp,
                                                            'description': description,
                                                            'worker': worker,
                                                            'category': category,
                                                            'code': code,
                                                            'isRepaired': isRepaired,
                                                            'repairDate': timestamp2,
                                                          });
                                                          Navigator.of(context).pop();

                                                          await refreshData();

                                                        } catch (error) {
                                                          print('Chyba pri aktualizácií záznamu: $error');
                                                        }
                                                        category = null;
                                                        code = null;
                                                      },
                                                      style: TextButton.styleFrom(
                                                        backgroundColor: customYellow,
                                                        minimumSize: Size(100, 50),
                                                        shape: RoundedRectangleBorder(
                                                          borderRadius: BorderRadius.circular(10),
                                                          side: BorderSide(color: Colors.black),
                                                        ),
                                                      ),
                                                      child: Text(
                                                        'Uložiť',
                                                        style: TextStyle(
                                                          fontSize: 18,
                                                          color: customDarkGrey,
                                                          fontWeight: FontWeight.bold,
                                                        ),
                                                      ),
                                                    ),

                                                  ],
                                                ),
                                              );
                                            },
                                          );
                                        },
                                      );
                                    },
                                  ),